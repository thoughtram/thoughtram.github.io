'use strict';
/* global window document lory */function _toConsumableArray(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;} else {return Array.from(arr);}}

document.addEventListener('DOMContentLoaded', function () {
  var body = document.querySelector('body');
  var navToggle = document.querySelector('#thtrm-nav-button');
  var menu = document.querySelector('#thtrm-nav-main-list');
  var testimonialWrapper = document.querySelector('#js-thtrm-testimonials');
  var addActiveModifierClass = function addActiveModifierClass(htmlEl) {return (
      htmlEl.classList.add('is-active'));};
  var removeActiveModifierClass = function removeActiveModifierClass(htmlEl) {return (
      htmlEl.classList.remove('is-active'));};
  var goToSlide = function goToSlide(instance) {return function (slideNum) {return (
        instance.slideTo(slideNum));};};
  var updateThumbnails = function updateThumbnails(xs) {return function (activeIndex) {
      xs.forEach(removeActiveModifierClass);
      addActiveModifierClass(xs[activeIndex]);
    };};
  var toggleNav = function toggleNav(state) {
    var isVisible = state ||
    navToggle.getAttribute('aria-expanded') === 'true' ? 'false' : 'true';

    navToggle.setAttribute(
    'aria-expanded', '' +
    isVisible);

    menu.classList.toggle('is-visible');
    return isVisible;
  };

  var hideNav = function hideNav() {
    navToggle.setAttribute(
    'aria-expanded', 'false');

    menu.classList.remove('is-visible');
  };

  if (testimonialWrapper && window.lory) {
    var testimonialThumbnails = [].concat(_toConsumableArray(
    document.querySelectorAll('.js-thtrm-testimonial-trigger')));
    var testimonialGallery = lory && lory(testimonialWrapper, {
      enableMouseEvents: true,
      slidesToScroll: 1,
      slideSpeed: 500,
      ease: 'cubic-bezier(0.455, 0.03, 0.515, 0.955)' });


    var goToSlideTestimonialGallery = goToSlide(testimonialGallery);
    var updateTestimonialThumbnails = updateThumbnails(testimonialThumbnails);

    testimonialWrapper.addEventListener('after.lory.slide', function (ev) {
      updateTestimonialThumbnails(ev.detail.currentSlide);
    });

    testimonialThumbnails.forEach(function (el) {return (
        el.addEventListener('click', function () {
          var slideNum = Number(el.getAttribute('data-slide-num')) - 1;
          goToSlideTestimonialGallery(slideNum);
        }));});
  }

  navToggle.addEventListener('click', function (ev) {
    var isVisible = toggleNav();
    ev.stopPropagation();
    ev.stopImmediatePropagation();
    if (isVisible === 'true') {
      body.addEventListener('click', hideNav, { once: true });
    } else {
      body.removeEventListener('click', hideNav);
    }
  }, false);

  document.addEventListener('keydown', function (evt) {
    var isEscape = 'key' in evt ?
    evt.key == 'Escape' || evt.key == 'Esc' :
    evt.keyCode == 27;

    if (isEscape) {
      hideNav();
      body.removeEventListener('click', hideNav);
    }
  });
});

var gaProperty = 'UA-51360648-2';

var disableStr = 'ga-disable-' + gaProperty;

if (document.cookie.indexOf(disableStr + '=true') > -1) {
  window[disableStr] = true;
}

function gaOptout() {
  document.cookie = disableStr + '=true; expires=Thu, 31 Dec 2099 23:59:59 UTC; path=/';
  window[disableStr] = true;

}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
